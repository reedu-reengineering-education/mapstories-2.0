version: '3.3'

services:
  postgis:
    image: postgis/postgis:14-3.2
    ports:
      - '5432:5432'
    env_file:
      - .env
    restart: on-failure
    healthcheck:
      test: 'exit 0'
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  minio:
    image: minio/minio
    restart: always
    ports:
      - '9000:9000'
      - '9090:9090'
    environment:
      MINIO_ACCESS_KEY: ${S3_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_SECRET_KEY}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - storage-minio:/data
    command: server --address ":9000" --console-address ":9090" /data
  borgmatic:
    image: ghcr.io/borgmatic-collective/borgmatic:1.7
    container_name: borgmatic
    env_file:
      - .env
    volumes:
      - ${VOLUME_SOURCE}:/mnt/source # backup source
      - ${VOLUME_TARGET}:/mnt/borg-repository # backup target
      - ${VOLUME_ETC_BORGMATIC}:/etc/borgmatic.d/ # borgmatic config file(s) + crontab.txt
      - ${VOLUME_BORG_CONFIG}:/root/.config/borg # config and keyfiles
      - ${VOLUME_SSH}:/root/.ssh # ssh key for remote repositories
      - ${VOLUME_BORG_CACHE}:/root/.cache/borg # checksums used for deduplication
    environment:
      - TZ=${TZ}
      - BORG_PASSPHRASE=${BORG_PASSPHRASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

volumes:
  storage-minio:
